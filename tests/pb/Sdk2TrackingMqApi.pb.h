// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Sdk2TrackingMqApi.proto

#ifndef PROTOBUF_INCLUDED_Sdk2TrackingMqApi_2eproto
#define PROTOBUF_INCLUDED_Sdk2TrackingMqApi_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_Sdk2TrackingMqApi_2eproto 

namespace protobuf_Sdk2TrackingMqApi_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_Sdk2TrackingMqApi_2eproto
namespace pb {
class AdInfo;
class AdInfoDefaultTypeInternal;
extern AdInfoDefaultTypeInternal _AdInfo_default_instance_;
}  // namespace pb
namespace google {
namespace protobuf {
template<> ::pb::AdInfo* Arena::CreateMaybeMessage<::pb::AdInfo>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace pb {

enum DataType {
  NONE = 0,
  PLATFORM_AD = 1,
  VIDEO_AD = 2,
  OWN_AD = 3,
  DOU_YIN_AD = 4,
  UN_HIT = 5,
  LIMIT_TIME = 6,
  LOGIC_ERROR = 7,
  LOCK_SCREEN = 8,
  GAME62_DATA = 9,
  DataType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DataType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DataType_IsValid(int value);
const DataType DataType_MIN = NONE;
const DataType DataType_MAX = GAME62_DATA;
const int DataType_ARRAYSIZE = DataType_MAX + 1;

const ::google::protobuf::EnumDescriptor* DataType_descriptor();
inline const ::std::string& DataType_Name(DataType value) {
  return ::google::protobuf::internal::NameOfEnum(
    DataType_descriptor(), value);
}
inline bool DataType_Parse(
    const ::std::string& name, DataType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DataType>(
    DataType_descriptor(), name, value);
}
// ===================================================================

class AdInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.AdInfo) */ {
 public:
  AdInfo();
  virtual ~AdInfo();

  AdInfo(const AdInfo& from);

  inline AdInfo& operator=(const AdInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AdInfo(AdInfo&& from) noexcept
    : AdInfo() {
    *this = ::std::move(from);
  }

  inline AdInfo& operator=(AdInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AdInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AdInfo* internal_default_instance() {
    return reinterpret_cast<const AdInfo*>(
               &_AdInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(AdInfo* other);
  friend void swap(AdInfo& a, AdInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AdInfo* New() const final {
    return CreateMaybeMessage<AdInfo>(NULL);
  }

  AdInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AdInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AdInfo& from);
  void MergeFrom(const AdInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AdInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string appName = 1;
  void clear_appname();
  static const int kAppNameFieldNumber = 1;
  const ::std::string& appname() const;
  void set_appname(const ::std::string& value);
  #if LANG_CXX11
  void set_appname(::std::string&& value);
  #endif
  void set_appname(const char* value);
  void set_appname(const char* value, size_t size);
  ::std::string* mutable_appname();
  ::std::string* release_appname();
  void set_allocated_appname(::std::string* appname);

  // string adSpaceName = 2;
  void clear_adspacename();
  static const int kAdSpaceNameFieldNumber = 2;
  const ::std::string& adspacename() const;
  void set_adspacename(const ::std::string& value);
  #if LANG_CXX11
  void set_adspacename(::std::string&& value);
  #endif
  void set_adspacename(const char* value);
  void set_adspacename(const char* value, size_t size);
  ::std::string* mutable_adspacename();
  ::std::string* release_adspacename();
  void set_allocated_adspacename(::std::string* adspacename);

  // @@protoc_insertion_point(class_scope:pb.AdInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr appname_;
  ::google::protobuf::internal::ArenaStringPtr adspacename_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Sdk2TrackingMqApi_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AdInfo

// string appName = 1;
inline void AdInfo::clear_appname() {
  appname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AdInfo::appname() const {
  // @@protoc_insertion_point(field_get:pb.AdInfo.appName)
  return appname_.GetNoArena();
}
inline void AdInfo::set_appname(const ::std::string& value) {
  
  appname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.AdInfo.appName)
}
#if LANG_CXX11
inline void AdInfo::set_appname(::std::string&& value) {
  
  appname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.AdInfo.appName)
}
#endif
inline void AdInfo::set_appname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  appname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.AdInfo.appName)
}
inline void AdInfo::set_appname(const char* value, size_t size) {
  
  appname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.AdInfo.appName)
}
inline ::std::string* AdInfo::mutable_appname() {
  
  // @@protoc_insertion_point(field_mutable:pb.AdInfo.appName)
  return appname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AdInfo::release_appname() {
  // @@protoc_insertion_point(field_release:pb.AdInfo.appName)
  
  return appname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AdInfo::set_allocated_appname(::std::string* appname) {
  if (appname != NULL) {
    
  } else {
    
  }
  appname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appname);
  // @@protoc_insertion_point(field_set_allocated:pb.AdInfo.appName)
}

// string adSpaceName = 2;
inline void AdInfo::clear_adspacename() {
  adspacename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AdInfo::adspacename() const {
  // @@protoc_insertion_point(field_get:pb.AdInfo.adSpaceName)
  return adspacename_.GetNoArena();
}
inline void AdInfo::set_adspacename(const ::std::string& value) {
  
  adspacename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.AdInfo.adSpaceName)
}
#if LANG_CXX11
inline void AdInfo::set_adspacename(::std::string&& value) {
  
  adspacename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.AdInfo.adSpaceName)
}
#endif
inline void AdInfo::set_adspacename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  adspacename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.AdInfo.adSpaceName)
}
inline void AdInfo::set_adspacename(const char* value, size_t size) {
  
  adspacename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.AdInfo.adSpaceName)
}
inline ::std::string* AdInfo::mutable_adspacename() {
  
  // @@protoc_insertion_point(field_mutable:pb.AdInfo.adSpaceName)
  return adspacename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AdInfo::release_adspacename() {
  // @@protoc_insertion_point(field_release:pb.AdInfo.adSpaceName)
  
  return adspacename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AdInfo::set_allocated_adspacename(::std::string* adspacename) {
  if (adspacename != NULL) {
    
  } else {
    
  }
  adspacename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), adspacename);
  // @@protoc_insertion_point(field_set_allocated:pb.AdInfo.adSpaceName)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::pb::DataType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::DataType>() {
  return ::pb::DataType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_Sdk2TrackingMqApi_2eproto
